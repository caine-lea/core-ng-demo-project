apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = 'core.framework.demo'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
        }
    }
}

def coreNGVersion = '5.2.4'
def kafkaVersion = '1.0.0'
def mongoVersion = '3.5.0'
def hsqlVersion = '2.4.0'

configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        runtime 'mysql:mysql-connector-java:6.0.6'
    }
}

configure(subprojects.findAll { it.name.matches('.*-service-interface') }) {
    dependencies {
        compile "core.framework:core-ng-api:${coreNGVersion}"
        testCompile "core.framework:core-ng-test:${coreNGVersion}"
    }
}

configure([project(':demo-service'),
           project(':demo-site')]) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        compile "core.framework:core-ng:${coreNGVersion}"
        runtime "org.apache.kafka:kafka-clients:${kafkaVersion}"
        testCompile "core.framework:core-ng-test:${coreNGVersion}"
    }
}

project(':demo-service') {
    dependencies {
        compile project(':demo-service-interface')
        compile "org.mongodb:mongo-java-driver:${mongoVersion}"
        compile "org.apache.kafka:kafka-clients:${kafkaVersion}"
        runtime 'mysql:mysql-connector-java:6.0.6'
        testRuntime "org.hsqldb:hsqldb:${hsqlVersion}"
    }
}

project(':demo-site') {
    apply from: file("${rootDir}/gradle/node.gradle")
}

project(':benchmark') {
    dependencies {
        compile "core.framework:core-ng:${coreNGVersion}"
        compile 'org.openjdk.jmh:jmh-generator-annprocess:1.19'
    }
}
