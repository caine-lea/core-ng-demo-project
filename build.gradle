apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    apply from: file("${rootDir}/gradle/check.gradle")

    group = 'core.framework.demo'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
        }
    }
}

def coreNGVersion = '4.14.1'
def redisVersion = '2.9.0'
def kafkaVersion = '0.11.0.0'
def mongoVersion = '3.4.2'

configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        runtime 'mysql:mysql-connector-java:6.0.6'
    }
}

configure(subprojects.findAll { it.name.matches('.*-service-interface') }) {
    dependencies {
        compile(
                "core.framework:core-ng-api:${coreNGVersion}"
        )
        testCompile(
                "core.framework:core-ng-test:${coreNGVersion}"
        )
    }
}

configure([project(':demo-service'),
           project(':demo-site')]) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        compile(
                "core.framework:core-ng:${coreNGVersion}"
        )
        runtime(
                "redis.clients:jedis:${redisVersion}@jar",
                "org.apache.kafka:kafka-clients:${kafkaVersion}"
        )
        testCompile(
                "core.framework:core-ng-test:${coreNGVersion}"
        )
    }
}

project(':demo-service') {
    dependencies {
        compile(
                project(':demo-service-interface'),
                "org.mongodb:mongo-java-driver:${mongoVersion}",
                "org.apache.kafka:kafka-clients:${kafkaVersion}"
        )
    }
}

project(':benchmark') {
    dependencies {
        compile(
                "core.framework:core-ng:${coreNGVersion}",
                'org.openjdk.jmh:jmh-generator-annprocess:1.19'
        )
    }
}
