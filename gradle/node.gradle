// This is old way of handling frontend project (gulp+server side template), now we moved to webpack (clearer frontend backend separation), refer to frontend.gradle and check https://github.com/neowu/frontend-demo-project
// use gradlew -Penv=${env} to pass
def env = hasProperty('env') ? env : null

def yarn(String... params) {
    def isWindows = org.gradle.internal.os.OperatingSystem.current().isWindows()
    return {
        workingDir "${rootDir}/gradle/node"
        def command = isWindows ? ['cmd', '/c', 'yarn'] : ['yarn']
        command.addAll(params)
        commandLine command
    }
}

clean {
    if (project.file('src/main/web').exists()) {
        doLast {
            exec yarn('install')
            exec yarn('run', 'clean', '--root', project.file('.') as String)
        }
    }
}

processResources {
    if (project.file('src/main/web').exists()) {
        inputs.dir project.file('src/main/web')
        doLast {
            exec yarn('install')
            exec yarn('run', 'build', '--root', project.file('.') as String)
        }
    }
}

distributions {
    if (env != null && project.file("conf/${env}/web").exists()) {
        main {
            contents {
                from("conf/${env}/web") {
                    into "web"
                }
            }
        }
    }
}
